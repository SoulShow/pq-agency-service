<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pq.agency.mapper.AgencyStudentLifeMapper" >
  <resultMap id="BaseResultMap" type="com.pq.agency.entity.AgencyStudentLife" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="agency_class_id" property="agencyClassId" jdbcType="BIGINT" />
    <result column="student_id" property="studentId" jdbcType="BIGINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="BIT" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from pq_agency_student_life
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.pq.agency.entity.AgencyStudentLife" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pq_agency_student_life (agency_class_id, title, content, 
      state, created_time, updated_time,student_id,user_id
      )
    values (#{agencyClassId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{state,jdbcType=BIT}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP},#{studentId},
    #{userId}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.pq.agency.entity.AgencyStudentLife" >
    update pq_agency_student_life
    set agency_class_id = #{agencyClassId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      state = #{state,jdbcType=BIT},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      student_id = #{studentId},
      user_id = #{user_id}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, agency_class_id, title, content, state, created_time, updated_time,student_id,user_id
    from pq_agency_student_life
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, agency_class_id, title, content, state, created_time, updated_time,student_id,user_id
    from pq_agency_student_life
  </select>

  <select id="selectByStudentIdAndAgencyClassId" resultMap="BaseResultMap" >
    select id, agency_class_id, title, content, state, created_time, updated_time,student_id,user_id
    from pq_agency_student_life
    where agency_class_id = #{agencyClassId}
    and student_id = #{studentId}
    and state = 1
    order by created_time desc
    limit #{offset},#{size}
  </select>
</mapper>